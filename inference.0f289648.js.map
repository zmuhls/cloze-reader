{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-0c1e82357bed3854.js","src/main.ts","src/utils/debugLog.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/utils/environmentConfig.ts","src/services/llmService.ts","src/services/gameLogic.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 61864;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"4943a1030f289648\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","// --- Constants and Config ---\n// Flag to force fallback mode even with valid API key (for debugging)\nconst FORCE_FALLBACK = false; // Using the provided API key\n\n// Empty stub functions for timer (since we're removing timer functionality)\nfunction startTimer() {\n  // Timer functionality removed\n}\n\nfunction stopTimer() {\n  // Timer functionality removed\n}\n\nimport { debugLog } from '@/utils/debugLog';\n// Import the environment configuration utilities\nimport { getEnvironmentConfig, isUsingUserProvidedApiKey } from '@/utils/environmentConfig';\n// getGutenbergBookData and GutendexBookDetails are no longer used here as metadata\n// is fetched by the web-enabled LLM directly in fetchGutenbergPassage.\n// Other Gutendex types like GutendexResponse, SearchGutenbergBooksArgs are not directly used in main.ts anymore.\n// import { getGutenbergBookData, GutendexBookDetails } from '@/services/gutenbergService'; // This line is removed\nimport { runAgenticLoop, tools as llmTools, OpenRouterMessage, ToolDefinition } from '@/services/llmService';\n// Import game logic functions and state, including startRound and handleSubmission\nimport { \n  chooseRedactions, extractKeyTerms, renderRound, initializeGameDOMElements, \n  paragraphsWords, redactedIndices, round as gameRound, blanksCount as gameBlanksCount, \n  hintsRemaining as gameHintsRemaining, hintedBlanks as gameHintedBlanks, \n  resetGame as gameLogicResetGame, \n  ParagraphCache, ParagraphCacheItem, \n  startRound as gameLogicStartRound, \n  handleSubmission as gameLogicHandleSubmission\n} from '@/services/gameLogic';\n\n// --- Type Definitions ---\n// Local OpenRouterMessage, ToolCallFunction, ToolCall, ToolParameterProperty, ToolDefinition are removed.\n// Local GutendexBook, GutendexResponse, SearchGutenbergBooksArgs are removed.\n// ParagraphCacheItem and ParagraphCache are moved to gameLogic.ts\n\n// LLM interaction logic (callLLM, getToolResponse, runAgenticLoop, tools array, TOOL_MAPPING)\n// is now imported from llmService.ts or handled within it.\n// The local logToolCall can be removed if not used elsewhere or can be kept if still needed for other debugging.\n// For now, let's assume it's not needed as llmService has its own.\n\n// --- Game Specific API Functions ---\n// fetchGutenbergPassage is now exported for use in gameLogic.ts\ninterface PassageData {\n  paragraphs: string[];\n  metadata: {\n    title: string;\n    author: string;\n    id: number;\n    century?: string;\n  } | null;\n}\n\nexport async function fetchGutenbergPassage(\n  category: string | null = null, \n  author: string | null = null,\n  century: string | null = null,\n  attemptedBookIds: number[] = [] // Keep track of books already tried\n): Promise<PassageData | null> {\n  const MAX_RETRIES = 3;\n  debugLog(\"Fetching Gutenberg passage\", { category, author, century, attempt: attemptedBookIds.length + 1 });\n\n  // CHECK 1: Allow real Gutenberg fetching when possible\n  // Only use fallback when necessary (GitHub Pages, missing API key)\n  const TEMP_FORCE_FALLBACK = false; // Enable real Gutenberg fetching\n  \n  // Check for API key and environment\n  const hasValidApiKey = Boolean(getEnvironmentConfig().OPENROUTER_API_KEY);\n  const isUsingCustomKey = isUsingUserProvidedApiKey();\n  const isGitHubPages = window.location.hostname.includes('github.io');\n  \n  debugLog(\"Environment check\", { \n    hasValidApiKey, \n    isUsingCustomKey,\n    isGitHubPages, \n    hostname: window.location.hostname,\n    apiKeyFormat: getEnvironmentConfig().OPENROUTER_API_KEY.substring(0, 8) + \"...\",\n    forceFallback: FORCE_FALLBACK,\n    tempForceFallback: TEMP_FORCE_FALLBACK\n  });\n\n  // Use hardcoded examples if:\n  // - we're on GitHub Pages AND don't have a custom key, OR\n  // - have no valid API key, OR\n  // - if we're forcing fallback mode (useful for debugging), OR\n  // - temporarily forcing fallback globally\n  // This fallback logic should be outside the retry loop, as it's a global override.\n  if (!hasValidApiKey || FORCE_FALLBACK || TEMP_FORCE_FALLBACK) {\n    console.warn(\"Using fallback passage due to missing API key or forced fallback.\");\n    let fallbackParagraphs: string;\n    let fallbackMetadata = { title: \"Fallback Passage\", author: \"Anonymous\", id: 0 };\n\n    if (category === 'adventure') {\n      fallbackParagraphs = `The intrepid explorer ventured deeper into the uncharted jungle, sweat beading on his brow as he hacked through the dense undergrowth with his machete. Strange bird calls echoed through the canopy above, and the air hung thick with moisture and the sweet scent of exotic flowers. He knew the lost temple lay somewhere ahead, its ancient stones hiding secrets that had remained untouched for centuries.\n\nAs night fell, he made camp beside a small stream, the gentle gurgling of water over stones providing a soothing counterpoint to the mysterious sounds of the jungle. His maps were worn and faded, but they had served him well thus far. Tomorrow would bring new challenges and, perhaps, the discovery that would cement his place in the annals of exploration.`;\n      fallbackMetadata = { title: \"Adventure Story Excerpt\", author: \"Various Authors\", id: 0 };\n    } else if (category === 'science') {\n      fallbackParagraphs = `The laboratory hummed with the soft whirring of centrifuges and the occasional beep of monitoring equipment. Dr. Chen carefully pipetted the clear solution into a series of test tubes, her steady hands reflecting years of practiced precision. This experiment represented months of theoretical work, and if successful, could fundamentally alter our understanding of cellular regeneration.\n\nScientific discovery has always balanced on the knife-edge between methodical process and creative insight. The greatest breakthroughs often come not from following established protocols, but from the moments when researchers question fundamental assumptions and pursue the unexpected anomalies that appear in their data. It is this combination of discipline and imagination that drives progress forward.`;\n      fallbackMetadata = { title: \"Scientific Musings\", author: \"Various Authors\", id: 0 };\n    } else {\n      // Default paragraphs for any other category or no category\n      fallbackParagraphs = `The ability to think clearly and rationally is essential for making good decisions and solving problems effectively. Critical thinking involves analyzing information objectively and making reasoned judgments based on evidence rather than personal bias or emotional reactions. It requires skills such as attention to detail, logical reasoning, and the willingness to question assumptions.\n\nThroughout history, literature has served as a mirror reflecting the values, concerns, and aspirations of society. Books allow us to experience different perspectives, fostering empathy and understanding across cultural divides. Whether through fiction or non-fiction, the written word preserves human knowledge and invites readers to engage with ideas that may challenge or expand their worldview.`;\n      fallbackMetadata = { title: \"General Knowledge Excerpt\", author: \"Various Authors\", id: 0 };\n    }\n\n    return {\n      paragraphs: fallbackParagraphs.split(/\\n+/).filter(p => p.trim().length > 0),\n      metadata: fallbackMetadata\n    };\n  }\n\n  // Retry loop\n  for (let attempt = 0; attempt < MAX_RETRIES; attempt++) {\n    debugLog(`Fetch attempt ${attempt + 1} of ${MAX_RETRIES}. Attempted IDs: ${attemptedBookIds.join(', ')}`);\n\n    const queryParts = [];\n    if (author) queryParts.push(`by author \"${author}\"`);\n    \n    if (category) {\n      if (category.includes('/')) {\n        const categoryCode = category.split('/')[1];\n        if (categoryCode) {\n          queryParts.push(`in the Gutenberg bookshelf ID \"${categoryCode}\"`);\n          debugLog(`Using bookshelf ID \"${categoryCode}\" from category \"${category}\".`);\n        } else {\n          debugLog(`Could not extract bookshelf ID from category \"${category}\". Category will be ignored.`);\n        }\n      } else {\n        queryParts.push(`in the category \"${category}\"`);\n      }\n    }\n\n    if (century) {\n      const centuryNumber = parseInt(century);\n      if (!isNaN(centuryNumber)) {\n          queryParts.push(`from the ${centuryNumber + 1}th century`);\n      }\n    }\n\n    let queryString = queryParts.join(' ');\n    let baseQueryInstruction: string;\n\n    if (queryParts.length > 0) {\n      baseQueryInstruction = `from Project Gutenberg ${queryString}`;\n      debugLog(\"Specific criteria provided: using standard query string.\");\n    } else {\n      // For the initial fetch when no user settings are provided,\n      // use a more specific instruction to encourage true randomness and variety.\n      baseQueryInstruction = \"from a truly random book in classic literature, prioritizing high variety and diverse selections. Please try to pick something unexpected or less common to ensure a unique experience.\";\n      debugLog(\"No specific criteria: using new enhanced random query string for initial fetch.\");\n    }\n    \n    let retryInstructions = \"\";\n    if (attempt > 0) {\n      retryInstructions = ` This is attempt ${attempt + 1}. Please ensure you select a *different* book than previous attempts.`;\n    }\n    if (attemptedBookIds.length > 0) {\n      retryInstructions += ` Avoid Project Gutenberg IDs: ${attemptedBookIds.join(', ')}.`;\n    }\n    \n    const userQuery = `Please provide a short literary passage (2-3 paragraphs) from Project Gutenberg.\n${baseQueryInstruction ? `Ideally, the passage should be ${baseQueryInstruction}.` : 'The passage can be from any classic literary work.'}\n${retryInstructions}\nInclude the title, author, and Project Gutenberg ID if available.\n\nFormat suggestion:\nTitle: [Book Title]\nAuthor: [Book Author]\nID: [Book ID]\nPassage:\n[The passage text]\n\nIf no passage can be found, please indicate that. Focus on returning a passage, even if all criteria cannot be perfectly met.`;\n\n    const messages: OpenRouterMessage[] = [\n      { role: 'system', content: 'You are an assistant that helps find and display literary passages from Project Gutenberg. Please provide the passage text along with its title, author, and Project Gutenberg ID if available. Prioritize finding a passage, even if specific search criteria (like category, author, or century) are suggestions and cannot all be met. Avoid adding commentary or analysis not present in the original text.' },\n      { role: 'user', content: userQuery }\n    ];\n\n    try {\n      // Determine temperature: higher for purely random, default otherwise\n      const temperature = (queryParts.length === 0) ? 1.2 : undefined;\n      debugLog(`LLM call (attempt ${attempt + 1}) with temperature: ${temperature === undefined ? 'default' : temperature}`);\n      const llmResponseContent = await runAgenticLoop(messages, [], temperature); \n\n      if (!llmResponseContent) {\n        console.error(`LLM call (attempt ${attempt + 1}) returned no content.`);\n        if (attempt === MAX_RETRIES - 1) return null; // Last attempt failed\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait before retrying\n        continue; // Next attempt\n      }\n\n      debugLog(`LLM Web Search Response for Passage (attempt ${attempt + 1}):`, llmResponseContent);\n\n      let bookTitle = \"Unknown Title\";\n      let bookAuthor = \"Unknown Author\";\n      let bookId: number | null = null;\n      let passageText = \"\";\n\n      const titleMatch = llmResponseContent.match(/Title:\\s*(.*)/i);\n      if (titleMatch && titleMatch[1]) bookTitle = titleMatch[1].trim();\n\n      const authorMatch = llmResponseContent.match(/Author:\\s*(.*)/i);\n      if (authorMatch && authorMatch[1]) bookAuthor = authorMatch[1].trim();\n\n      const idMatch = llmResponseContent.match(/ID:\\s*(\\d+)/i);\n      if (idMatch && idMatch[1]) bookId = parseInt(idMatch[1], 10);\n\n      // Add bookId to attemptedBookIds if valid and not already present\n      if (bookId !== null && !attemptedBookIds.includes(bookId)) {\n        attemptedBookIds.push(bookId);\n      }\n      \n      const passageMarker = \"Passage:\";\n      const passageStartIndex = llmResponseContent.indexOf(passageMarker);\n\n      if (passageStartIndex !== -1) {\n        passageText = llmResponseContent.substring(passageStartIndex + passageMarker.length).trim();\n      } else {\n        let lastMetadataIndex = 0;\n        if (titleMatch) lastMetadataIndex = Math.max(lastMetadataIndex, (titleMatch.index || 0) + titleMatch[0].length);\n        if (authorMatch) lastMetadataIndex = Math.max(lastMetadataIndex, (authorMatch.index || 0) + authorMatch[0].length);\n        if (idMatch) lastMetadataIndex = Math.max(lastMetadataIndex, (idMatch.index || 0) + idMatch[0].length);\n        if (lastMetadataIndex > 0 && lastMetadataIndex < llmResponseContent.length) {\n          passageText = llmResponseContent.substring(lastMetadataIndex).trim();\n        } else if (!titleMatch && !authorMatch && !idMatch) {\n          passageText = llmResponseContent.trim();\n          debugLog(\"No metadata markers found, assuming entire response is passage text.\");\n        }\n      }\n      \n      if (!passageText || llmResponseContent.toLowerCase().includes(\"no suitable passage found\")) {\n          console.warn(`Attempt ${attempt + 1}: Could not extract passage text or LLM indicated no passage found.`);\n          if (attempt === MAX_RETRIES - 1) return null; // Last attempt failed\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait before retrying\n          continue; // Next attempt\n      }\n\n      let paragraphs = passageText\n        .split(/\\n\\s*\\n/)\n        .map((p: string) => p.trim())\n        .filter((p: string) => p.length > 150 && !p.startsWith('Project Gutenberg') && !p.startsWith('***') && !p.includes('*** END OF ') && !p.startsWith('THE END') && !p.includes('www.gutenberg.org') && !/^\\*+$/.test(p))\n        .slice(0, 10);\n      \n      if (paragraphs.length < 2) {\n        debugLog(`Attempt ${attempt + 1}: First parsing didn't yield enough paragraphs, trying alternative.`);\n        paragraphs = passageText\n          .replace(/\\r\\n/g, '\\n')\n          .split(/(?:\\n\\s*){2,}/)\n          .map((p: string) => p.replace(/\\n/g, ' ').trim())\n          .filter((p: string) => p.length > 150 && !p.includes('Project Gutenberg'))\n          .slice(0, 10);\n      }\n      \n      paragraphs.sort((a, b) => {\n        const scoreA = Math.min(a.length, 1000) - Math.max(0, 2000 - a.length) + (a.match(/[.!?][\\s\"']/) ? 200 : 0);\n        const scoreB = Math.min(b.length, 1000) - Math.max(0, 2000 - b.length) + (b.match(/[.!?][\\s\"']/) ? 200 : 0);\n        return scoreB - scoreA;\n      });\n      \n      paragraphs = paragraphs.slice(0, 2);\n      \n      if (paragraphs.length === 0) {\n        debugLog(`Attempt ${attempt + 1}: Failed to extract suitable paragraphs after all parsing attempts.`);\n      }\n\n      // If we have at least one good paragraph, proceed. Otherwise, retry.\n      if (paragraphs.length > 0) { // Changed from paragraphs.length < 2 to paragraphs.length > 0 for success condition\n        console.log(`Attempt ${attempt + 1}: Successfully extracted ${paragraphs.length} paragraphs.`);\n        return {\n          paragraphs: paragraphs,\n          metadata: { \n            title: bookTitle,\n            author: bookAuthor,\n            id: bookId !== null ? bookId : 0 \n          }\n        };\n      } else {\n        console.warn(`Attempt ${attempt + 1}: Could only extract ${paragraphs.length} suitable paragraphs. Retrying if attempts remain.`);\n        // No suitable paragraphs found in this attempt, loop will continue if attempts < MAX_RETRIES\n      }\n\n    } catch (error) {\n      console.error(`Error in fetchGutenbergPassage (LLM web search, attempt ${attempt + 1}):`, error);\n      // Loop will continue if attempts < MAX_RETRIES\n    }\n    if (attempt < MAX_RETRIES - 1) {\n      await new Promise(resolve => setTimeout(resolve, 1000 * (attempt + 1))); // Exponential backoff might be better\n    }\n  } // End of retry loop\n\n  console.error(\"Failed to fetch a suitable passage after all retries.\");\n  return null; // Indicate failure after all retries\n}\n\n// are now imported from and managed by gameLogic.ts.\n// We use aliasing for round, blanksCount, hintsRemaining, hintedBlanks to avoid naming conflicts if needed,\n// though direct usage of imported names is fine if there are no conflicts.\n\n// Function to reset game state for a new game (not just a new round)\nfunction resetGame() {\n  // We'll use the imported resetGame function from gameLogic\n  gameLogicResetGame();\n\n  // Additional UI updates if needed\n  if (gameArea) gameArea.innerHTML = '';\n  if (resultArea) resultArea.textContent = '';\n  if (roundInfo) roundInfo.textContent = '';\n  if (bibliographicArea) bibliographicArea.innerHTML = '';\n  stopTimer();\n}\n\n// Cache DOM elements\nlet bibliographicArea: HTMLElement, gameArea: HTMLElement, resultArea: HTMLElement, hintBtn: HTMLButtonElement,\n    submitBtn: HTMLButtonElement, roundInfo: HTMLElement, newTextBtn: HTMLButtonElement, welcomeOverlay: HTMLElement, startGameBtn: HTMLButtonElement;\n\nfunction querySelectorSafe<T extends Element>(selector: string, container: Document | Element = document): T | null {\n    const element = container.querySelector(selector);\n    if (!element) {\n        console.warn(`Element with selector \"${selector}\" not found.`);\n        return null;\n    }\n    return element as T;\n}\n\nfunction cacheDOMElements() {\n    try {\n        bibliographicArea = querySelectorSafe<HTMLElement>('#bibliographic-area') || document.createElement('div');\n        gameArea = querySelectorSafe<HTMLElement>('#game-area') || document.createElement('div');\n        resultArea = querySelectorSafe<HTMLElement>('#result') || document.createElement('div');\n        hintBtn = querySelectorSafe<HTMLButtonElement>('#hint-btn') || document.createElement('button');\n        submitBtn = querySelectorSafe<HTMLButtonElement>('#submit-btn') || document.createElement('button');\n        roundInfo = querySelectorSafe<HTMLElement>('#round-info') || document.createElement('div');\n        \n        // Settings elements are now handled by Preact components\n        newTextBtn = querySelectorSafe<HTMLButtonElement>('#new-text-btn') || document.createElement('button');\n        \n        // Check for welcome overlay elements (may not exist in inference.html)\n        welcomeOverlay = querySelectorSafe<HTMLElement>('#welcome-overlay') || document.createElement('div');\n        startGameBtn = querySelectorSafe<HTMLButtonElement>('#start-game-btn') || document.createElement('button');\n        \n        console.log(\"DOM Elements cached successfully:\", {\n            gameAreaFound: !!document.querySelector('#game-area'),\n            welcomeOverlayFound: !!document.querySelector('#welcome-overlay'),\n            startGameBtnFound: !!document.querySelector('#start-game-btn')\n        });\n\n        // Initialize DOM elements for gameLogic service\n        initializeGameDOMElements({\n            gameArea,\n            roundInfo,\n            submitBtn,\n            hintBtn,\n            resultArea,\n            bibliographicArea\n        });\n    } catch (error) {\n        console.error(\"Error caching DOM elements:\", error);\n    }\n}\n\n// Make functions globally available for legacy code and avoiding circular imports\nif (typeof window !== 'undefined') {\n    (window as any).startRound = gameLogicStartRound;\n    // findRelatedBooks is removed\n    console.log(\"Added global functions to window object\");\n}\n\n// Initialize the application when the DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Cache DOM elements\n    cacheDOMElements();\n\n    // Set up event listeners\n    // The startGameBtn event listener is removed from here as it's handled by the WelcomeOverlay component's onStart prop\n    // and the app.tsx component.\n\n    newTextBtn.addEventListener('click', async () => {\n      // Fetch a new passage without resetting game state, forcing a new passage\n      await gameLogicStartRound(true);\n    });\n    submitBtn.addEventListener('click', () => gameLogicHandleSubmission());\n    \n    // Show welcome overlay\n    // The welcome overlay visibility is now primarily managed by the App component's state\n    // and the WelcomeOverlay component itself.\n    // However, ensuring it's initially visible if not handled by Preact's initial render might still be useful.\n    // For now, let's assume Preact handles initial visibility correctly.\n    // If issues arise, we might need to revisit this.\n    // welcomeOverlay.classList.remove('hidden'); // This line can likely be removed or conditionalized\n});\n","// src/utils/debugLog.ts\n\n/**\n * Helper function to add detailed debug logs to the console.\n * Includes a timestamp and optional data payload.\n * @param message The main log message.\n * @param data Optional data to be logged as a JSON string.\n */\nexport function debugLog(message: string, data?: any): void {\n  const timestamp = new Date().toISOString();\n  console.log(`[DEBUG ${timestamp}] ${message}`);\n  if (data !== undefined) {\n    try {\n      // Attempt to stringify, handling potential circular references or large objects\n      const jsonData = JSON.stringify(data, (key, value) => {\n        if (value instanceof HTMLElement) {\n          return `HTMLElement (${value.tagName}${value.id ? '#' + value.id : ''})`;\n        }\n        // Add more complex object handling here if needed\n        return value;\n      }, 2);\n      console.log(jsonData);\n    } catch (error) {\n      console.log('[DEBUG Data Stringify Error]', error);\n      console.log('[DEBUG Raw Data]', data); // Log raw data if stringify fails\n    }\n  }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// src/utils/environmentConfig.ts\n\nimport { debugLog } from './debugLog';\n\n/**\n * Environment configuration management for the application\n * Handles secure storage and retrieval of sensitive configuration values\n */\n\n// Define the default safe fallback key (will be used if no key is found)\n// This key is obfuscated to prevent direct copying\nconst ENCODED_DEFAULT_KEY = 'c2stb3ItdjEtNGY4MmQ3NDBlZmQyNjlhY2IwYTA4MGIzMTgyNTQ5NDlhMTQ5Y2FlYTZmNzFkODAxMGM0MDJkNWQ5ZGViYjQ1Zg==';\n\n/**\n * Interface defining the environment configuration structure\n */\nexport interface EnvironmentConfig {\n  OPENROUTER_API_KEY: string;\n  IS_REMOTE_INTERFACE: boolean;\n  // Add other environment variables here as needed\n}\n\n/**\n * Determines if the application is running in a remote interface like GitHub Pages\n * @returns boolean indicating if this is a remote interface\n */\nexport function isRemoteInterface(): boolean {\n  return window.location.hostname.includes('github.io') || \n         window.location.hostname === 'cloze-reader.vercel.app' ||\n         window.location.protocol === 'file:';\n}\n\n/**\n * Retrieves the current environment configuration\n * Prioritizes user-provided values in localStorage over defaults\n * In remote interfaces, always uses the default key for security\n */\nexport function getEnvironmentConfig(): EnvironmentConfig {\n  const remote = isRemoteInterface();\n  \n  // Try to get user-set API key from localStorage\n  const userProvidedKey = localStorage.getItem('openrouter_api_key');\n  const isUserKeyValid = Boolean(userProvidedKey) && \n                          userProvidedKey!.startsWith('sk-or-') && \n                          userProvidedKey!.length > 20;\n  \n  // Decode the default key\n  const defaultKey = atob(ENCODED_DEFAULT_KEY);\n  \n  // Use default key if in remote interface, otherwise use user key if valid\n  const apiKey = remote ? defaultKey : (isUserKeyValid ? userProvidedKey! : defaultKey);\n  \n  debugLog(\"Environment config loaded\", { \n    isRemoteInterface: remote,\n    usingUserKey: !remote && isUserKeyValid,\n    keyFormat: apiKey.substring(0, 8) + \"...\"\n  });\n  \n  return {\n    OPENROUTER_API_KEY: apiKey,\n    IS_REMOTE_INTERFACE: remote\n  };\n}\n\n/**\n * Checks if a user-provided API key is being used\n * Useful for determining if we're using a default key or user-provided key\n * Always returns false in remote interfaces for security\n */\nexport function isUsingUserProvidedApiKey(): boolean {\n  // In remote interfaces, always report as using the default key\n  if (isRemoteInterface()) {\n    return false;\n  }\n  \n  const userProvidedKey = localStorage.getItem('openrouter_api_key');\n  return Boolean(userProvidedKey) && \n         userProvidedKey!.startsWith('sk-or-') && \n         userProvidedKey!.length > 20;\n}\n\n/**\n * Sets a user-provided API key in localStorage\n * Also validates the key format\n * In remote interfaces, this is a no-op for security\n * @param key The API key to set\n * @returns Whether the key was valid and set successfully\n */\nexport function setUserApiKey(key: string): boolean {\n  // In remote interfaces, don't allow setting custom API keys\n  if (isRemoteInterface()) {\n    debugLog(\"Cannot set custom API key in remote interface\");\n    return false;\n  }\n  \n  const trimmedKey = key.trim();\n  if (trimmedKey && trimmedKey.startsWith('sk-or-') && trimmedKey.length > 20) {\n    localStorage.setItem('openrouter_api_key', trimmedKey);\n    return true;\n  }\n  return false;\n}\n","// src/services/llmService.ts\n\nimport { debugLog } from '@/utils/debugLog';\nimport { getEnvironmentConfig } from '@/utils/environmentConfig';\n// Removed import of searchGutenbergBooks and SearchGutenbergBooksArgs as they are no longer used.\n\n// --- Type Definitions (subset relevant to this service) ---\nexport interface OpenRouterMessage {\n  role: 'system' | 'user' | 'assistant' | 'tool';\n  content?: string | null;\n  tool_calls?: ToolCall[];\n  tool_call_id?: string;\n  name?: string; // for tool role if function name\n}\n\nexport interface ToolCallFunction {\n  name: string;\n  arguments: string; // JSON string\n}\n\nexport interface ToolCall {\n  id: string;\n  type: 'function';\n  function: ToolCallFunction;\n}\n\nexport interface ToolParameterProperty {\n  type: string;\n  items?: { type: string };\n  description: string;\n}\n\nexport interface ToolDefinition {\n  type: 'function';\n  function: {\n    name: string;\n    description: string;\n    parameters: {\n      type: 'object';\n      properties: Record<string, ToolParameterProperty>;\n      required: string[];\n    };\n  };\n}\n\n// --- Tool Definitions & Mappings (specific to LLM service) ---\n// Tools for Gutenberg search and text fetching are removed as the :online model handles this.\nexport const tools: ToolDefinition[] = [\n  // No tools defined here anymore, or only non-Gutenberg related tools if any exist.\n];\n\n// TOOL_MAPPING is no longer needed if no tools are defined, or will only contain non-Gutenberg tools.\nexport const TOOL_MAPPING: Record<string, (args: any) => Promise<object>> = {\n  // Empty or contains other tools\n};\n\n// For debugging tool calls\nfunction logToolCall(message: string, data: any): void {\n  // Using debugLog for consistency, assuming it's globally available or passed/imported\n  debugLog(`[LLM Service Tool Call] ${message}`, data);\n}\n\n/**\n * Calls the OpenRouter LLM API with the given messages and tools.\n * @param messages Array of messages for the LLM.\n * @param currentTools Optional array of tool definitions for the LLM.\n * @param temperature Optional temperature setting for the LLM.\n * @returns A promise that resolves to the assistant's response message.\n */\nexport async function callLLM(messages: OpenRouterMessage[], currentTools?: ToolDefinition[], temperature?: number): Promise<OpenRouterMessage> {\n  const body: {\n    model: string;\n    messages: OpenRouterMessage[];\n    tools?: ToolDefinition[];\n    tool_choice?: 'auto' | 'none' | { type: string; function: { name: string } };\n    temperature?: number;\n  } = {\n    model: 'google/gemini-flash-1.5:online', // Using a web-enabled Gemini model\n    messages,\n    // Web search is enabled by :online, specific plugin config might not be needed\n    // unless we want to customize search_prompt or max_results.\n    // For now, relying on default :online behavior.\n  };\n\n  if (temperature !== undefined) {\n    body.temperature = temperature;\n    debugLog(\"LLM Service: Using custom temperature\", temperature);\n  }\n\n  // If tools are provided, add them. Otherwise, the model will rely on web search.\n  if (currentTools && currentTools.length > 0) {\n    body.tools = currentTools;\n    body.tool_choice = 'auto'; // Let the model decide when to use tools\n    debugLog(\"LLM Service: Using tools\", currentTools);\n  } else {\n    // If no specific tools, ensure tool_choice is not set or is 'none' if we want to prevent any tool use.\n    // For web search, 'auto' or omitting tool_choice is fine.\n    // The :online suffix handles the web search plugin implicitly.\n    debugLog(\"LLM Service: No specific tools provided, relying on web search via :online model suffix.\");\n  }\n\n  debugLog(\"LLM Service: OpenRouter API Request\", body);\n\n  try {\n    const apiKey = getEnvironmentConfig().OPENROUTER_API_KEY;\n    \n    const response = await fetch(\n      'https://openrouter.ai/api/v1/chat/completions',\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': typeof window !== 'undefined' ? window.location.href : '', // Handle server-side if needed\n          'X-Title': 'Cloze', // App-specific title\n        },\n        body: JSON.stringify(body),\n      }\n    );\n\n    if (!response.ok) {\n      let errorData;\n      try {\n        errorData = await response.json();\n      } catch (e) {\n        errorData = await response.text();\n      }\n      const errorMessage = (typeof errorData === 'object' && errorData?.error?.message) ? errorData.error.message : (typeof errorData === 'string' ? errorData : 'Unknown API error');\n      console.error(\"LLM Service: OpenRouter API Error:\", response.status, errorMessage);\n      throw new Error(`OpenRouter API Error: ${response.status} - ${errorMessage}`);\n    }\n\n    const data = await response.json();\n    debugLog(\"LLM Service: OpenRouter API Response\", data);\n\n    if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n      console.error(\"LLM Service: Invalid response structure from OpenRouter:\", data);\n      throw new Error(\"Invalid response structure from OpenRouter.\");\n    }\n    return data.choices[0].message as OpenRouterMessage;\n  } catch (error) {\n    console.error(\"LLM Service: Error calling OpenRouter API:\", error);\n    throw error; // Re-throw to be handled by the caller\n  }\n}\n\n/**\n * Processes tool calls from an assistant's response.\n * @param assistantResponse The assistant's message containing tool calls.\n * @returns A promise that resolves to a message with the tool's response.\n */\nexport async function getToolResponse(assistantResponse: OpenRouterMessage): Promise<OpenRouterMessage> {\n  if (!assistantResponse.tool_calls || assistantResponse.tool_calls.length === 0) {\n    throw new Error(\"Assistant response does not contain tool calls.\");\n  }\n\n  const toolCall = assistantResponse.tool_calls[0]; // Assuming one tool call for now\n  const toolName = toolCall.function.name;\n  logToolCall(\"Received tool call\", { toolName, toolCallId: toolCall.id });\n\n  let toolArgs;\n  try {\n    toolArgs = JSON.parse(toolCall.function.arguments);\n    logToolCall(\"Parsed tool arguments\", toolArgs);\n  } catch (error) {\n    const errorObj = error as Error;\n    console.error(\"LLM Service: Failed to parse tool arguments:\", errorObj);\n    return {\n      role: 'tool',\n      tool_call_id: toolCall.id,\n      name: toolName,\n      content: JSON.stringify({ error: `Invalid JSON in tool arguments: ${errorObj.message}` }),\n    };\n  }\n\n  const toolFunction = TOOL_MAPPING[toolName];\n  if (!toolFunction) {\n    console.error(`LLM Service: Tool ${toolName} not found in TOOL_MAPPING.`);\n    return {\n      role: 'tool',\n      tool_call_id: toolCall.id,\n      name: toolName,\n      content: JSON.stringify({ error: `Tool ${toolName} not found.` }),\n    };\n  }\n\n  try {\n    logToolCall(\"Executing tool function\", { name: toolName });\n    const toolResult = await toolFunction(toolArgs);\n    logToolCall(\"Tool execution result\", toolResult);\n    return {\n      role: 'tool',\n      tool_call_id: toolCall.id,\n      name: toolName,\n      content: JSON.stringify(toolResult),\n    };\n  } catch (error: any) {\n    console.error(`LLM Service: Error executing tool ${toolName}:`, error);\n    return {\n      role: 'tool',\n      tool_call_id: toolCall.id,\n      name: toolName,\n      content: JSON.stringify({ error: `Error executing tool ${toolName}: ${error.message}` }),\n    };\n  }\n}\n\n/**\n * Runs an agentic loop with the LLM, handling tool calls.\n * @param initialMessages The initial set of messages to start the loop.\n * @param loopTools The tools available for the LLM to use in this loop.\n * @param temperature Optional temperature setting for the LLM calls within the loop.\n * @returns A promise that resolves to the final assistant content or an error message.\n */\nexport async function runAgenticLoop(initialMessages: OpenRouterMessage[], loopTools: ToolDefinition[], temperature?: number): Promise<string | null> {\n  let messages: OpenRouterMessage[] = [...initialMessages];\n  const MAX_ITERATIONS = 5; // Prevent infinite loops\n\n  for (let i = 0; i < MAX_ITERATIONS; i++) {\n    debugLog(`LLM Service: Agentic Loop Iteration ${i + 1}`);\n    const assistantResponse = await callLLM(messages, loopTools, temperature); // Pass temperature\n    messages.push(assistantResponse);\n\n    if (assistantResponse.tool_calls && assistantResponse.tool_calls.length > 0) {\n      // Potentially handle multiple tool calls in the future if needed\n      const toolResponseMessage = await getToolResponse(assistantResponse);\n      messages.push(toolResponseMessage);\n    } else {\n      // No tool calls, loop finishes, return assistant's content\n      return assistantResponse.content ?? null;\n    }\n  }\n\n  console.warn(\"LLM Service: Agentic loop reached max iterations.\");\n  const lastMessage = messages.length > 0 ? messages[messages.length - 1] : null;\n  if (lastMessage && lastMessage.role === 'assistant' && lastMessage.content) {\n    return lastMessage.content;\n  }\n  return \"Agentic loop completed without a final assistant message or an error occurred.\";\n}\n","// src/services/gameLogic.ts\n\nimport { debugLog } from '@/utils/debugLog';\n\n// --- Type Definitions (specific to game logic) ---\n// If ScoredWord is only used here, keep it here. Otherwise, consider a shared types file.\ninterface ScoredWord {\n  index: number;\n  score: number;\n}\n\nexport interface ParagraphCacheItem {\n  value: string;\n  timestamp: number;\n}\n\nexport interface ParagraphCache {\n  cache: Record<string, ParagraphCacheItem>;\n  maxSize: number;\n  set: (key: string, value: string) => void;\n  get: (key: string) => string | null;\n  init: () => void;\n}\n\n// --- Caching ---\nconst paragraphCache: ParagraphCache = {\n  cache: {},\n  maxSize: 10,\n  set: function(key, value) {\n    if (Object.keys(this.cache).length >= this.maxSize) {\n      const oldestKey = Object.keys(this.cache)[0];\n      delete this.cache[oldestKey];\n    }\n    this.cache[key] = { value, timestamp: Date.now() };\n    try { localStorage.setItem('paragraphCache', JSON.stringify(this.cache)); }\n    catch (e) { console.warn('Could not save cache to localStorage', e); }\n  },\n  get: function(key) {\n    const item = this.cache[key];\n    if (!item) return null;\n    if (Date.now() - item.timestamp > 24 * 60 * 60 * 1000) { // 24hr expiry\n      delete this.cache[key];\n      try { localStorage.setItem('paragraphCache', JSON.stringify(this.cache)); }\n      catch (e) { console.warn('Could not update cache in localStorage', e); }\n      return null;\n    }\n    return item.value;\n  },\n  init: function() {\n    try {\n      const saved = localStorage.getItem('paragraphCache');\n      if (saved) this.cache = JSON.parse(saved);\n    } catch (e) { console.warn('Could not load cache from localStorage', e); this.cache = {}; }\n  }\n};\n\n// Initialize the cache when the module is loaded\nparagraphCache.init();\n\n// --- Game Logic Functions ---\n\n/**\n * Chooses words to redact from a list of words based on a scoring mechanism.\n * @param words The array of words in the paragraph.\n * @param count The desired number of redactions.\n * @returns An array of indices to be redacted.\n */\nexport function chooseRedactions(words: string[], count: number): number[] {\n  const indices: number[] = [];\n  if (words.length === 0 || count === 0) return indices;\n\n  const functionWords = new Set([\n    'the', 'a', 'an', 'and', 'or', 'but', 'if', 'of', 'at', 'by', 'for', 'with', 'about',\n    'to', 'from', 'in', 'on', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have',\n    'has', 'had', 'do', 'does', 'did', 'will', 'would', 'shall', 'should', 'can', 'could',\n    'may', 'might', 'must', 'that', 'which', 'who', 'whom', 'whose', 'this', 'these',\n    'those', 'am', 'i', 'we', 'you', 'he', 'she', 'they', 'we', 'it' // Corrected: removed duplicate 'we'\n  ]);\n\n  const scoredWords: ScoredWord[] = words.map((word, index) => {\n    const cleanWord = word.toLowerCase().replace(/[^\\w]/g, '');\n    let score = 0;\n    score += cleanWord.length * 2;\n    if (functionWords.has(cleanWord)) {\n      score -= 10;\n    }\n    if (index > 0 && word[0] === word[0].toUpperCase() && word[0].match(/[A-Z]/)) {\n      score += 5;\n    }\n    score += Math.random() * 2;\n    return { index, score };\n  });\n\n  scoredWords.sort((a, b) => b.score - a.score);\n\n  const actualCount = Math.min(count, words.length);\n  const candidatePoolSize = Math.min(actualCount * 2, words.length);\n  const topCandidates = scoredWords.slice(0, candidatePoolSize);\n\n  while (indices.length < actualCount && topCandidates.length > 0) {\n    const randomIndex = Math.floor(Math.random() * topCandidates.length);\n    const selectedWord = topCandidates.splice(randomIndex, 1)[0];\n    indices.push(selectedWord.index);\n  }\n\n  return indices.sort((a, b) => a - b);\n}\n\n/**\n * Extracts key terms from an array of words based on frequency, excluding common words.\n * @param words The array of words to process.\n * @param count The number of key terms to extract.\n * @returns An array of key terms.\n */\nexport function extractKeyTerms(words: string[], count = 3): string[] {\n  const commonWords = new Set(['the', 'and', 'of', 'to', 'a', 'in', 'that', 'it', 'is', 'was', 'were', 'for', 'on', 'with', 'as', 'by', 'an', 'be', 'at', 'or', 'i', 'he', 'she', 'they', 'we', 'you', 'my', 'his', 'her', 'its', 'our', 'your', 'them', 'us', 'me', 'had', 'has', 'have', 'do', 'does', 'did', 'will', 'would', 'should', 'can', 'could', 'may', 'might', 'must', 'not', 'no', 'so', 'if', 'but', 'very', 'just', 'from', 'into', 'out', 'up', 'down', 'over', 'under', 'again', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'than', 'too', 'very', 's', 't', 'd', 'll', 'm', 'o', 're', 've']);\n  const frequency: Record<string, number> = {};\n  words.forEach(word => {\n    const cleanWord = word.toLowerCase().replace(/[^a-z0-9']/g, '');\n    if (cleanWord.length > 3 && !commonWords.has(cleanWord) && !/^\\d+$/.test(cleanWord)) {\n      frequency[cleanWord] = (frequency[cleanWord] || 0) + 1;\n    }\n  });\n  return Object.entries(frequency)\n    .sort(([,a],[,b]) => b-a)\n    .slice(0, count)\n    .map(([term]) => term);\n}\n\n// --- Game State Variables ---\n// These will be managed within this module.\nexport let paragraphsWords: string[][] = [[], []];\nexport let redactedIndices: number[][] = [[], []];\nexport let round = 1;\nexport let blanksCount = 1;\nexport let hintsRemaining = 5;\nexport let hintedBlanks: Set<string> = new Set();\nexport let previousBooks: { title: string; author: string; id: number }[] = [];\n\n// --- DOM Element References ---\n// These will be initialized by a function called from main.ts or passed as arguments.\n// For now, assuming they will be passed to functions that need them or queried internally.\n// Let's define placeholders that functions can expect to be populated.\ninterface GameDOMElements {\n  gameArea: HTMLElement;\n  roundInfo: HTMLElement;\n  submitBtn: HTMLButtonElement;\n  hintBtn: HTMLButtonElement;\n  resultArea: HTMLElement;\n  bibliographicArea: HTMLElement; // Added bibliographicArea\n}\n\nlet domElements: GameDOMElements | null = null;\n\nexport function initializeGameDOMElements(elements: GameDOMElements) {\n  domElements = elements;\n}\n\n\n// --- Timer and UI Effect Stubs/References ---\n// These functions are currently in main.ts. For now, we'll assume they are globally available\n// or will be passed/imported eventually.\ndeclare function startTimer(): void;\ndeclare function stopTimer(): void; // Added for completeness, though renderRound doesn't call it directly\ndeclare global {\n  interface Window {\n    applyTypewriterEffect: (element?: HTMLElement) => void;\n  }\n}\n\n/**\n * Renders the current round of the game, displaying paragraphs with redactions.\n */\nexport function renderRound() {\n  if (!domElements) {\n    console.error(\"DOM elements not initialized for gameLogic.renderRound\");\n    return;\n  }\n\n  const { gameArea, roundInfo, submitBtn, hintBtn, resultArea } = domElements;\n\n  const totalBlanks = redactedIndices[0].length + redactedIndices[1].length;\n  roundInfo.textContent = `Round ${round} — ${totalBlanks} blanks`;\n  gameArea.innerHTML = '';\n\n  if (paragraphsWords[0].length === 0 && paragraphsWords[1].length === 0) {\n    gameArea.innerHTML = '<p class=\"text-red-500\">Error: No paragraphs loaded.</p>';\n    submitBtn.disabled = true;\n    hintBtn.disabled = true;\n    // stopTimer(); // stopTimer is not directly called here but good to note dependency\n    return;\n  }\n\n  for (let pIdx = 0; pIdx < 2; pIdx++) {\n    if (paragraphsWords[pIdx].length === 0) continue;\n\n    const paragraphElement = document.createElement('p');\n    paragraphElement.className = 'typewriter-text leading-relaxed break-words mb-6';\n    paragraphElement.style.maxWidth = '100%';\n    paragraphElement.style.overflowWrap = 'break-word';\n    gameArea.appendChild(paragraphElement);\n\n    paragraphsWords[pIdx].forEach((word, idx) => {\n      if (redactedIndices[pIdx].includes(idx)) {\n        const input = document.createElement('input');\n        input.type = 'text';\n        input.dataset.index = String(idx);\n        input.dataset.paragraph = String(pIdx);\n        input.placeholder = '_____';\n        // Enhanced styling for input boxes\n        input.className = 'border-b-2 border-typewriter-ink w-24 mx-1 text-center bg-transparent focus:outline-none focus:border-typewriter-ribbon focus:ring-1 focus:ring-typewriter-ribbon rounded-sm px-1 py-0.5 text-typewriter-ink placeholder-typewriter-ink placeholder-opacity-50';\n\n\n        input.addEventListener('keydown', (e) => {\n          if (e.key.length === 1) {\n            input.classList.add('shadow-typewriter-pressed');\n            setTimeout(() => input.classList.remove('shadow-typewriter-pressed'), 100);\n          }\n        });\n\n        input.addEventListener('input', () => {\n          const allFilled = Array.from(gameArea.querySelectorAll<HTMLInputElement>('input[type=\"text\"]')).every(i => i.value.trim() !== '');\n          submitBtn.disabled = !allFilled;\n        });\n        paragraphElement.appendChild(input);\n        paragraphElement.appendChild(document.createTextNode(' '));\n\n        input.addEventListener('focus', () => {\n          if (!domElements) return; // Guard against null domElements\n          const paragraphIdx = Number(input.dataset.paragraph);\n          const wordIdx = Number(input.dataset.index);\n          const blankKey = `${paragraphIdx}-${wordIdx}`;\n\n          domElements.hintBtn.disabled = hintsRemaining <= 0 || hintedBlanks.has(blankKey);\n\n          domElements.hintBtn.onclick = () => {\n            if (hintsRemaining > 0 && !hintedBlanks.has(blankKey)) {\n              const originalWord = paragraphsWords[paragraphIdx][wordIdx];\n\n              if (originalWord) {\n                const hintText = `Starts with \"${originalWord[0]}\", length ${originalWord.length}.`;\n                const hintDiv = document.createElement('div');\n                hintDiv.className = 'fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50';\n                hintDiv.innerHTML = `\n                  <div class=\"bg-aged-paper p-6 rounded shadow-typewriter max-w-md text-center typewriter-text\">\n                    <h3 class=\"text-xl font-bold mb-4 text-shadow-typewriter\">Hint</h3>\n                    <p>${hintText}</p>\n                    <button class=\"mt-4 px-4 py-2 typewriter-key hover:bg-aged-paper\">Got it</button>\n                  </div>\n                `;\n                document.body.appendChild(hintDiv);\n\n                const closeHint = () => document.body.removeChild(hintDiv);\n                hintDiv.querySelector('button')?.addEventListener('click', closeHint);\n                hintDiv.addEventListener('click', (e) => {\n                  if (e.target === hintDiv) closeHint();\n                });\n\n                hintsRemaining--;\n                if (domElements) domElements.hintBtn.textContent = `Hint (${hintsRemaining})`;\n                hintedBlanks.add(blankKey);\n                input.classList.add('hinted-blank');\n                if (domElements) domElements.hintBtn.disabled = hintsRemaining <= 0 || hintedBlanks.has(blankKey);\n              }\n            }\n          };\n        });\n      } else {\n        const wordSpan = document.createElement('span');\n        wordSpan.textContent = word + ' ';\n        wordSpan.className = 'typewriter-text';\n        paragraphElement.appendChild(wordSpan);\n      }\n    });\n  }\n\n  const totalRedactedCount = redactedIndices[0].length + redactedIndices[1].length;\n  submitBtn.disabled = totalRedactedCount === 0;\n  hintBtn.disabled = hintsRemaining <= 0 || totalRedactedCount === 0;\n  resultArea.textContent = '';\n\n  // Assuming startTimer is globally available or will be handled\n  if (typeof startTimer === 'function') {\n    startTimer();\n  }\n\n\n  setTimeout(() => {\n    if (typeof window !== 'undefined' && window.applyTypewriterEffect) {\n      window.applyTypewriterEffect();\n    }\n  }, 100);\n}\n\n/**\n * Resets the game state for a new game.\n */\nexport function resetGame() {\n  if (!domElements) {\n    console.error(\"DOM elements not initialized for gameLogic.resetGame\");\n    return;\n  }\n  const { gameArea, resultArea, roundInfo, bibliographicArea } = domElements;\n\n  round = 1;\n  blanksCount = 1;\n  hintsRemaining = 5;\n  hintedBlanks.clear();\n  paragraphsWords[0] = [];\n  paragraphsWords[1] = [];\n  redactedIndices[0] = [];\n  redactedIndices[1] = [];\n  previousBooks = []; // Reset previous books on a full game reset\n\n  if (gameArea) gameArea.innerHTML = '';\n  if (resultArea) resultArea.textContent = '';\n  if (roundInfo) roundInfo.textContent = '';\n  if (bibliographicArea) bibliographicArea.innerHTML = '';\n\n  if (typeof stopTimer === 'function') {\n    stopTimer();\n  }\n  debugLog(\"Game reset in gameLogic.ts\");\n}\n\n\nimport { fetchGutenbergPassage } from '@/main'; \n\n/**\n * Starts a new round of the game by fetching a new passage and rendering it.\n */\nexport async function startRound(forceNewPassage: boolean = false) {\n  if (!domElements) {\n    console.error(\"DOM elements not initialized for gameLogic.startRound\");\n    return;\n  }\n  const { gameArea, roundInfo, submitBtn, hintBtn, resultArea, bibliographicArea } = domElements;\n\n  hintsRemaining = 3; \n  if (hintBtn) hintBtn.textContent = `Hint (${hintsRemaining})`;\n  if (submitBtn) submitBtn.disabled = true;\n  if (hintBtn) hintBtn.disabled = true;\n  if (gameArea) gameArea.innerHTML = '<div class=\"text-center p-4\"><p class=\"text-lg typewriter-text\">Fetching new paragraphs from Gutenberg...</p><p class=\"text-sm mt-2 text-opacity-70\">*click* *clack* *ding*</p></div>';\n  if (resultArea) resultArea.textContent = '';\n  hintedBlanks.clear();\n  if (typeof stopTimer === 'function') { \n    stopTimer(); \n  }\n\n  if (bibliographicArea) {\n      bibliographicArea.innerHTML = '';\n  }\n\n  const category = localStorage.getItem('game_category') || '';\n  const author = localStorage.getItem('game_author') || '';\n  const century = localStorage.getItem('game_century') || ''; // Fetch century as well\n\n  let cacheKey = `passage_${category || 'any'}_${author || 'any'}_${century || 'any'}`; // Include century in cache key\n\n  // If all search parameters are empty, it's a \"random\" request.\n  // Add a random component to the cache key to ensure a fresh fetch for \"truly random\" initial passages,\n  // unless forceNewPassage is explicitly false (which might be used for specific reloads of the *same* random passage).\n  // However, startRound is usually called with forceNewPassage=true for the very first load via app.tsx.\n  if (!category && !author && !century && forceNewPassage) {\n    cacheKey = `passage_random_${Date.now()}_${Math.random().toString(36).substring(7)}`;\n    debugLog(\"Generated unique cache key for initial random passage:\", { cacheKey });\n  }\n\n  const cachedPassage = paragraphCache.get(cacheKey);\n  // For truly random initial fetches, we want to bypass cache even if forceNewPassage wasn't explicitly true,\n  // but the logic above already makes the cacheKey unique, effectively bypassing it.\n  if (!forceNewPassage && cachedPassage && !cacheKey.startsWith('passage_random_')) {\n    debugLog(\"Serving passage from cache\", { cacheKey });\n    const parsedCache = JSON.parse(cachedPassage);\n     if (parsedCache && parsedCache.paragraphs && Array.isArray(parsedCache.paragraphs)) {\n        const passageData = {\n            paragraphs: parsedCache.paragraphs,\n            metadata: parsedCache.metadata || null\n        };\n        if (bibliographicArea && passageData.metadata) {\n            // Add to previous books history if not already there\n            const isAlreadyFetched = previousBooks.some(book => book.id === passageData.metadata!.id);\n            if (!isAlreadyFetched) {\n              previousBooks.unshift(passageData.metadata);\n              if (previousBooks.length > 5) {\n                previousBooks.pop();\n              }\n            }\n\n            let historyHtml = '';\n            if (previousBooks.length > 1) {\n                historyHtml = '<p class=\"text-xs text-typewriter-ink opacity-60 mt-1\">Previously fetched:</p><ul class=\"text-xs list-disc list-inside opacity-60\">';\n                previousBooks.slice(1, 5).forEach(book => {\n                    historyHtml += `<li><a href=\"https://www.gutenberg.org/ebooks/${book.id}\" target=\"_blank\" class=\"underline hover:text-typewriter-ribbon\">${book.title} by ${book.author}</a></li>`;\n                });\n                historyHtml += '</ul>';\n            }\n            bibliographicArea.innerHTML = `\n                <p class=\"text-sm text-typewriter-ink opacity-80 mb-1\">\n                    (Cached) Currently from: <em><a href=\"https://www.gutenberg.org/ebooks/${passageData.metadata.id}\" target=\"_blank\" class=\"underline hover:text-typewriter-ribbon\">${passageData.metadata.title}</a></em> by ${passageData.metadata.author} (ID: ${passageData.metadata.id})\n                </p>\n                ${historyHtml}\n            `;\n            setTimeout(() => {\n                if (typeof window !== 'undefined' && (window as any).applyTypewriterEffect) {\n                    const metaElements = bibliographicArea.querySelectorAll('p, em, a, li');\n                    metaElements.forEach(el => (window as any).applyTypewriterEffect(el));\n                }\n            }, 100);\n        }\n        paragraphsWords[0] = passageData.paragraphs[0].split(/\\s+/).filter((w: string) => w.length > 0);\n        paragraphsWords[1] = passageData.paragraphs.length > 1 ?\n          passageData.paragraphs[1].split(/\\s+/).filter((w: string) => w.length > 0) : [];\n\n        redactedIndices[0].length = 0;\n        redactedIndices[1].length = 0;\n        const totalWords = paragraphsWords[0].length + paragraphsWords[1].length;\n        const maxPossibleBlanks = Math.floor(totalWords * 0.3);\n        const actualBlanksCount = Math.min(blanksCount, maxPossibleBlanks);\n\n        if (paragraphsWords[0].length > 0) {\n          const firstParaBlanks = paragraphsWords[1].length > 0 ?\n            Math.floor(actualBlanksCount * (paragraphsWords[0].length / totalWords)) :\n            actualBlanksCount;\n          const newRedactionsPara0 = chooseRedactions(paragraphsWords[0], firstParaBlanks);\n          newRedactionsPara0.forEach(r => redactedIndices[0].push(r));\n        }\n        if (paragraphsWords[1].length > 0) {\n          const secondParaBlanks = actualBlanksCount - redactedIndices[0].length;\n          const newRedactionsPara1 = chooseRedactions(paragraphsWords[1], secondParaBlanks);\n          newRedactionsPara1.forEach(r => redactedIndices[1].push(r));\n        }\n\n        if ((redactedIndices[0].length + redactedIndices[1].length) === 0) {\n          if (gameArea) gameArea.innerHTML = '<div class=\"text-center p-4\"><p class=\"text-lg text-red-500 typewriter-text\">Could not generate enough blanks from cached passage. Try different criteria or refresh.</p></div>';\n          if (submitBtn) submitBtn.disabled = true;\n          if (hintBtn) hintBtn.disabled = true;\n          if (typeof stopTimer === 'function') { \n            stopTimer();\n          }\n          return null;\n        }\n\n        renderRound();\n        return passageData;\n     } else {\n        console.warn(\"Cached data for key\", cacheKey, \"is invalid. Fetching new.\");\n     }\n  } else {\n    if (forceNewPassage) {\n      debugLog(\"Forcing new passage fetch, bypassing cache.\", { cacheKey });\n    } else {\n      debugLog(\"Cache miss or invalid cache data. Fetching new passage.\", { cacheKey });\n    }\n    \n  let fetchedPassageData: Awaited<ReturnType<typeof fetchGutenbergPassage>> = null;\n  \n  try {\n    // Pass century to fetchGutenbergPassage and initialize attemptedBookIds\n    fetchedPassageData = await fetchGutenbergPassage(category, author, century, []); \n    \n    if (!fetchedPassageData || fetchedPassageData.paragraphs.length === 0) {\n      if (gameArea) gameArea.innerHTML = '<div class=\"text-center p-4\"><p class=\"text-lg text-red-500 typewriter-text\">Could not load a suitable passage after multiple attempts. Please check your API key, network, or try different search criteria.</p></div>';\n      if (submitBtn) submitBtn.disabled = true;\n      if (hintBtn) hintBtn.disabled = true;\n      if (typeof stopTimer === 'function') { \n        stopTimer();\n      }\n      return;\n    }\n  \n    try {\n      paragraphCache.set(cacheKey, JSON.stringify(fetchedPassageData));\n      debugLog(\"Passage stored in cache\", { cacheKey });\n    } catch (e) {\n      console.warn(\"Failed to store passage in cache:\", e);\n    }\n  \n    paragraphsWords[0] = fetchedPassageData.paragraphs[0].split(/\\s+/).filter((w: string) => w.length > 0);\n    paragraphsWords[1] = fetchedPassageData.paragraphs.length > 1 ?\n      fetchedPassageData.paragraphs[1].split(/\\s+/).filter((w: string) => w.length > 0) : [];\n  \n    // Check if fetchedPassageData and its metadata are not null\n    if (bibliographicArea && fetchedPassageData && fetchedPassageData.metadata) {\n        // Add to previous books history\n        const isAlreadyFetched = previousBooks.some(book => book.id === fetchedPassageData!.metadata!.id); // Added non-null assertion as we've checked fetchedPassageData\n        if (!isAlreadyFetched) {\n          previousBooks.unshift(fetchedPassageData.metadata); \n          if (previousBooks.length > 5) { \n            previousBooks.pop();\n          }\n        }\n\n        let historyHtml = '';\n        if (previousBooks.length > 1) { \n            historyHtml = '<p class=\"text-xs text-typewriter-ink opacity-60 mt-1\">Previously fetched:</p><ul class=\"text-xs list-disc list-inside opacity-60\">';\n            previousBooks.slice(1, 5).forEach(book => { \n                historyHtml += `<li><a href=\"https://www.gutenberg.org/ebooks/${book.id}\" target=\"_blank\" class=\"underline hover:text-typewriter-ribbon\">${book.title} by ${book.author}</a></li>`;\n            });\n            historyHtml += '</ul>';\n        }\n\n        bibliographicArea.innerHTML = `\n            <p class=\"text-sm text-typewriter-ink opacity-80 mb-1\">\n                Currently from: <em><a href=\"https://www.gutenberg.org/ebooks/${fetchedPassageData.metadata.id}\" target=\"_blank\" class=\"underline hover:text-typewriter-ribbon\">${fetchedPassageData.metadata.title}</a></em> by ${fetchedPassageData.metadata.author} (ID: ${fetchedPassageData.metadata.id})\n            </p>\n            ${historyHtml}\n        `;\n        setTimeout(() => {\n            if (typeof window !== 'undefined' && (window as any).applyTypewriterEffect) {\n                const metaElements = bibliographicArea.querySelectorAll('p, em, a, li');\n                metaElements.forEach(el => (window as any).applyTypewriterEffect(el));\n            }\n        }, 100);\n    }\n  } catch (error) {\n    console.error(\"Error fetching passage:\", error);\n    if (gameArea) gameArea.innerHTML = '<div class=\"text-center p-4\"><p class=\"text-lg text-red-500 typewriter-text\">An error occurred while fetching content. Please check your API key and network connection.</p></div>';\n    if (submitBtn) submitBtn.disabled = true;\n    if (hintBtn) hintBtn.disabled = true;\n    if (typeof stopTimer === 'function') {\n      stopTimer();\n    }\n    return;\n  }\n  \n  if (!fetchedPassageData) return;\n\n  redactedIndices[0].length = 0;\n  redactedIndices[1].length = 0;\n  const totalWords = paragraphsWords[0].length + paragraphsWords[1].length;\n  const maxPossibleBlanks = Math.floor(totalWords * 0.3);\n  const actualBlanksCount = Math.min(blanksCount, maxPossibleBlanks);\n\n  if (paragraphsWords[0].length > 0) {\n    const firstParaBlanks = paragraphsWords[1].length > 0 ?\n      Math.floor(actualBlanksCount * (paragraphsWords[0].length / totalWords)) :\n      actualBlanksCount;\n    const newRedactionsPara0 = chooseRedactions(paragraphsWords[0], firstParaBlanks);\n    newRedactionsPara0.forEach(r => redactedIndices[0].push(r));\n  }\n  if (paragraphsWords[1].length > 0) {\n    const secondParaBlanks = actualBlanksCount - redactedIndices[0].length;\n    const newRedactionsPara1 = chooseRedactions(paragraphsWords[1], secondParaBlanks);\n    newRedactionsPara1.forEach(r => redactedIndices[1].push(r));\n  }\n\n  if ((redactedIndices[0].length + redactedIndices[1].length) === 0) {\n    if (gameArea) gameArea.innerHTML = '<div class=\"text-center p-4\"><p class=\"text-lg text-red-500 typewriter-text\">Could not generate enough blanks. Try different criteria or refresh.</p></div>';\n    if (submitBtn) submitBtn.disabled = true;\n    if (hintBtn) hintBtn.disabled = true;\n    if (typeof stopTimer === 'function') { \n      stopTimer();\n    }\n    return;\n  }\n\n  renderRound();\n}\n}\n\n/**\n * Handles the submission of the user's guesses, checks answers, and updates the UI.\n * @param timedOut Whether the submission was triggered by a timer timeout.\n */\nexport async function handleSubmission(timedOut = false) {\n  if (!domElements) {\n    console.error(\"DOM elements not initialized for gameLogic.handleSubmission\");\n    return;\n  }\n  const { gameArea, submitBtn, hintBtn, resultArea } = domElements;\n\n  if (typeof stopTimer === 'function') { \n    stopTimer(); \n  }\n\n  const submitSound = () => {\n    // Optional: Add typewriter 'ding' sound effect here\n  };\n  submitSound();\n\n  const inputs = Array.from(gameArea.querySelectorAll<HTMLInputElement>('input[type=\"text\"]'));\n  let correctCount = 0;\n  let totalCount = 0;\n\n  inputs.forEach(input => {\n    totalCount++;\n    const paragraphIdx = Number(input.dataset.paragraph || '0');\n    const wordIdx = Number(input.dataset.index);\n\n    const originalWord = paragraphsWords[paragraphIdx][wordIdx];\n    const guessedWord = input.value.trim(); \n\n    const originalWordClean = originalWord.replace(/[^\\w\\s'-]/g, '').toLowerCase();\n    const guessedWordClean = guessedWord.toLowerCase();\n\n    const wordSpan = document.createElement('span');\n    wordSpan.className = 'typewriter-text font-bold'; \n\n    if (guessedWordClean === originalWordClean) {\n      correctCount++;\n      wordSpan.textContent = originalWord + ' '; \n      wordSpan.classList.add('text-green-700'); \n    } else {\n      wordSpan.textContent = `${guessedWord} [${originalWord}] `; \n      wordSpan.classList.add('text-red-700'); \n    }\n\n    input.parentElement?.insertBefore(wordSpan, input);\n    input.remove();\n  });\n\n  const neededToPass = Math.ceil(totalCount * 0.6);\n  resultArea.classList.remove('text-green-700', 'text-red-700');\n\n  if (timedOut) {\n    resultArea.textContent = `Time's up! You got ${correctCount}/${totalCount} correct.`;\n    resultArea.classList.add(correctCount >= neededToPass ? 'text-green-700' : 'text-red-700', 'text-shadow-typewriter');\n  } else {\n    resultArea.textContent = `${correctCount}/${totalCount} correct.`;\n    resultArea.classList.add(correctCount >= neededToPass ? 'text-green-700' : 'text-red-700', 'text-shadow-typewriter');\n  }\n\n  if (correctCount >= neededToPass) {\n      round++;\n      blanksCount++;\n      if (resultArea) resultArea.textContent += ` Starting Round ${round} with ${blanksCount} blanks in 8 seconds...`;\n  } else {\n      if (resultArea) resultArea.textContent += ` Getting a new passage in 8 seconds...`;\n  }\n\n  if (submitBtn) submitBtn.disabled = true;\n  if (hintBtn) hintBtn.disabled = true;\n\n  if (correctCount >= neededToPass) {\n    setTimeout(() => startRound(false), 8000);\n  } else {\n    setTimeout(() => startRound(true), 8000);\n  }\n}\n"],"names":[],"version":3,"file":"inference.0f289648.js.map","sourceRoot":"/__parcel_source_root/"}